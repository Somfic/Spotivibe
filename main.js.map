{"version":3,"file":"main.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,Y,QCAzBF,EAAOC,QAAUC,QAAQ,yB,QCAzBF,EAAOC,QAAUC,QAAQ,U,OCAzBF,EAAOC,QAAUC,QAAQ,UCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uFChBf,gCACA,4BACA,gCAEMQ,GAAM,eAENC,EAAoBC,EAAKC,KAAKC,UAAW,gBAE/CJ,EAAIK,IAAI,UAAQC,OAAOL,IAEvBD,EAAIO,IAAI,iBAAiB,CAACC,EAAKC,KAC7B,IACE,MAAMC,EAAa,IAAI,UAAc,CACnCC,SAAUC,QAAQC,IAAIC,kBACtBC,aAAcH,QAAQC,IAAIG,sBAC1BC,YAAa,GAAGL,QAAQC,IAAIK,qCAI9BR,EAAWS,uBACTX,EAAIY,MAAMC,KAAKC,YACf,CAAOC,EAAOC,KAAS,EAAD,+CACpB,GAAID,EACF,OAAOd,EAAIgB,KAAKF,GAAOG,OAAO,KAGhChB,EAAWiB,eAAeH,EAAKI,KAAKC,cACpCnB,EAAWoB,gBAAgBN,EAAKI,KAAKG,eAErC,MAAMC,EAAS,IAAIC,gBAAgB,CACjCF,cAAeP,EAAKI,KAAKG,cACzBF,aAAcL,EAAKI,KAAKC,aACxBK,WAAYV,EAAKI,KAAKM,WAAWZ,WACjCa,OAAQX,EAAKI,KAAKQ,MAClBC,WAAYb,EAAKI,KAAKS,aAGlBC,QAAa5B,EAAW6B,QAC9BC,QAAQC,IAAI,uBAAwBC,KAAKC,UAAUL,EAAKV,OAExDnB,EAAImC,SAAS,GAAGhC,QAAQC,IAAIgC,wBAAwBb,UAGxD,MAAOc,GACPrC,EAAImC,SAAS,GAAGhC,QAAQC,IAAIgC,8BAA8BC,SAI9D9C,EAAIO,IAAI,cAAc,CAACC,EAAKC,KAC1B,MAYMsC,EAPa,IAAI,UAAc,CACnCpC,SAAUC,QAAQC,IAAIC,kBACtBC,aAAcH,QAAQC,IAAIG,sBAC1BC,YAAa,GAAGL,QAAQC,IAAIK,qCAIE8B,mBAZjB,CACb,oBACA,4BAUyD,SAG3DvC,EAAImC,SAASG,MAGf,MAAME,EAAOrC,QAAQC,IAAIqC,MAAQ,KAClBlD,EAAImD,OAAOF,GAAM,KAC9BT,QAAQC,IAAI7B,QAAQC,KACpB2B,QAAQC,IAAI,iCAAiCQ,YAExCG,GAAG,QAASZ,QAAQjB,Q","sources":["webpack://spotivibe/external commonjs \"express\"","webpack://spotivibe/external commonjs \"spotify-web-api-node\"","webpack://spotivibe/external commonjs \"tslib\"","webpack://spotivibe/external node-commonjs \"path\"","webpack://spotivibe/webpack/bootstrap","webpack://spotivibe/./apps/server-api/src/main.ts"],"sourcesContent":["module.exports = require(\"express\");","module.exports = require(\"spotify-web-api-node\");","module.exports = require(\"tslib\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport express from 'express';\nimport * as path from 'path';\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nconst app = express();\n\nconst CLIENT_BUILD_PATH = path.join(__dirname, '../spotivibe');\n\napp.use(express.static(CLIENT_BUILD_PATH));\n\napp.get('/api/callback', (req, res) => {\n  try {\n    const spotifyApi = new SpotifyWebApi({\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n      redirectUri: `${process.env.SPOTIFY_SERVER_URL}/api/callback/`,\n    });\n\n    // Retrieve an access token\n    spotifyApi.authorizationCodeGrant(\n      req.query.code.toString(),\n      async (error, data) => {\n        if (error) {\n          return res.send(error).status(500);\n        }\n\n        spotifyApi.setAccessToken(data.body.access_token);\n        spotifyApi.setRefreshToken(data.body.refresh_token);\n\n        const params = new URLSearchParams({\n          refresh_token: data.body.refresh_token,\n          access_token: data.body.access_token,\n          expires_in: data.body.expires_in.toString(),\n          scopes: data.body.scope,\n          token_type: data.body.token_type,\n        });\n\n        const user = await spotifyApi.getMe();\n        console.log('Authenticated user: ', JSON.stringify(user.body));\n\n        res.redirect(`${process.env.SPOTIFY_REDIRECT_URL}?${params}`);\n      }\n    );\n  } catch (err) {\n    res.redirect(`${process.env.SPOTIFY_REDIRECT_URL}?error=${err}`);\n  }\n});\n\napp.get('/api/login', (req, res) => {\n  const scopes = [\n    \"user-read-private\",\n    \"user-read-playback-state\"\n  ];\n\n  const spotifyApi = new SpotifyWebApi({\n    clientId: process.env.SPOTIFY_CLIENT_ID,\n    clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    redirectUri: `${process.env.SPOTIFY_SERVER_URL}/api/callback/`,\n  });\n\n  // Generate a random string for the state\n  const authorizeURL = spotifyApi.createAuthorizeURL(scopes, \"state\");\n\n  // Redirect to Spotify for authentication\n  res.redirect(authorizeURL);\n});\n\nconst port = process.env.PORT || 3333;\nconst server = app.listen(port, () => {\n  console.log(process.env)\n  console.log(`Listening at http://localhost:${port}/api`);\n});\nserver.on('error', console.error);\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","CLIENT_BUILD_PATH","path","join","__dirname","use","static","get","req","res","spotifyApi","clientId","process","env","SPOTIFY_CLIENT_ID","clientSecret","SPOTIFY_CLIENT_SECRET","redirectUri","SPOTIFY_SERVER_URL","authorizationCodeGrant","query","code","toString","error","data","send","status","setAccessToken","body","access_token","setRefreshToken","refresh_token","params","URLSearchParams","expires_in","scopes","scope","token_type","user","getMe","console","log","JSON","stringify","redirect","SPOTIFY_REDIRECT_URL","err","authorizeURL","createAuthorizeURL","port","PORT","listen","on"],"sourceRoot":""}